/*
    Generator configuration language for textX-ER based models.
*/

/*

// Files extension should be .genconf

// Perform for each object of particular type.
// Target file name is constructed from path parts and reference to 
// object (entity) attribute value. Path part may be given as strings
// or as plain text (if no white-space is involved.)

Entity:
    for Entity as entity
        angular/form.html => "forms/" + entity.name + ".html"

// collect all object of particular type and perform once for the list.
Enums:
    for all Enums as enums
        flask/enums.py.template => flask/enums.py

Model:
    for Model as model
        flask/models.py.template => flask/models.py

*/

ConfigurationFile:
    rules*=GenRule
;

GenRule:
    name=ID ':'
    'for' all?='all' type=ID 'as' var_name=ID
        template_path=FilePath '=>' target_file_expr=TargetFilePathExpression
;

FilePath:
    /[a-zA-Z0-9_-\.\/]+/
;

TargetFilePathExpression:
    op=FilePathOrAttr ('+' op=FilePathOrAttr)*
;

FilePathOrAttr:
    STRING | FilePath | AttributeReference
;

AttributeReference[noskipws]:
    /\s*/ obj=ID '.' attr=ID
;

Comment:
  /\/\/.*$/|/\/\*(.|\n)*?\*\//
;
